(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Tab = /*#__PURE__*/function () {
  function Tab(selector) {
    _classCallCheck(this, Tab);

    this.selector = document.querySelector(selector);

    if (this.selector) {
      this.navigationItems = Array.from(this.selector.querySelectorAll('[toggle-for]'));
      this.contentList = Array.from(this.selector.querySelectorAll('[tab-id]'));
      this.init();
    }
  }

  _createClass(Tab, [{
    key: "changeTabWhenClicked",
    value: function changeTabWhenClicked() {
      var _this = this;

      this.navigationItems.forEach(function (element, index) {
        element.addEventListener('click', function (e) {
          e.preventDefault();
          var tabTarget = element.attributes['toggle-for'].value;
          var targetDOM = Array.from(_this.selector.querySelectorAll("[tab-id='".concat(tabTarget, "']")));

          _this.navigationItems.forEach(function (eleClicked, eleClickedIndex) {
            if (eleClickedIndex != index) {
              eleClicked.classList.remove('active');
            }
          });

          _this.contentList.forEach(function (tabContentElement) {
            if (tabContentElement.attributes['tab-id'].value != tabTarget) {
              tabContentElement.style.display = 'none';
              tabContentElement.classList.remove('show');
            }
          });

          element.classList.add('active');
          targetDOM.forEach(function (item) {
            item.style.display = 'block';
          });
          setTimeout(function () {
            targetDOM.forEach(function (item) {
              item.classList.add('show');
            });
          }, 50);
        });
      });
    }
  }, {
    key: "activeFirstTab",
    value: function activeFirstTab() {
      if (this.navigationItems.length > 0) {
        this.navigationItems[0].click();
      }
    }
  }, {
    key: "init",
    value: function init() {
      this.changeTabWhenClicked();
      this.activeFirstTab();
    }
  }]);

  return Tab;
}();

exports.default = Tab;

},{}],2:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cartTotal = exports.checkCart = void 0;

var _tabs = _interopRequireDefault(require("./libraries/tabs"));

var _wpCustom = _interopRequireWildcard(require("./wp-custom"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fixedHeaderWhenScroll = function fixedHeaderWhenScroll() {
  var header = document.querySelector('header');

  if (window.pageYOffset > header.offsetHeight) {
    header.classList.add('fixed');
  } else {
    header.classList.remove('fixed');
  }
};

var checkCart = function checkCart() {
  if (parseInt((0, _wpCustom.readCookie)()) == 0) {
    var tbodyRef = document.querySelector('.table-cart').getElementsByTagName('tbody')[0];
    tbodyRef.insertRow().innerHTML = '<td class="empty-cart" colspan="6">Giỏ hàng trống</td>';
  }
};

exports.checkCart = checkCart;

var showNaviationMobile = function showNaviationMobile() {
  var itemsNavigationMobile = document.querySelectorAll('.navigation-mobile ul li');
  var navigation = document.querySelector('.main-navigation');
  var body = document.querySelector('body');
  var btnClose = document.querySelector('.main-navigation .btn-close');
  var overlay = document.querySelector('#overlay');
  itemsNavigationMobile[itemsNavigationMobile.length - 1].addEventListener('click', function (e) {
    navigation.classList.add('show');
    body.classList.add('no-scroll');
    overlay.classList.add('active');
  });

  if (btnClose) {
    btnClose.addEventListener('click', function (e) {
      navigation.classList.remove('show');
      body.classList.remove('no-scroll');
      overlay.classList.remove('active');
    });
  }

  if (overlay) {
    overlay.addEventListener('click', function (e) {
      navigation.classList.remove('show');
      body.classList.remove('no-scroll');
      overlay.classList.remove('active');
    });
  }
};

var moveNavOutHeader = function moveNavOutHeader(responsive) {
  var nav = document.querySelector('.main-navigation');
  var body = document.querySelector('body');
  var header = document.querySelector('header .nav-config-mobile');

  if (window.innerWidth < responsive) {
    if (nav && body) {
      body.append(nav);
    }
  } else {
    if (nav && header) {
      header.appendChild(nav);
    }
  }
};

var showFilterMobile = function showFilterMobile() {
  var btn = document.querySelector('.collection-bar .filter-button');
  var asdie = document.querySelector('.aside-menu-products');
  var body = document.querySelector('body');
  var btnClose = document.querySelector('.aside-menu-products .btn-close');
  var overlay = document.querySelector('#overlay');

  if (btn) {
    btn.addEventListener('click', function (e) {
      asdie.classList.add('active');
      body.classList.add('no-scroll');
      overlay.classList.add('active');
    });

    if (btnClose) {
      btnClose.addEventListener('click', function (e) {
        asdie.classList.remove('active');
        body.classList.remove('no-scroll');
        overlay.classList.remove('active');
      });
    }

    if (overlay) {
      overlay.addEventListener('click', function (e) {
        asdie.classList.remove('active');
        body.classList.remove('no-scroll');
        overlay.classList.remove('active');
      });
    }
  }
};

var initHeroBanner = function initHeroBanner() {
  var slider = new Swiper('.hero-banner .swiper-container');
};

var initSliderCategoryProduct = function initSliderCategoryProduct() {
  var sliderThumb = new Swiper('.index-categories-product .slider-thumb .swiper-container', {
    slidesPerView: 2,
    navigation: {
      nextEl: '.index-categories-product .button-navigation-slider.next',
      prevEl: '.index-categories-product .button-navigation-slider.prev'
    },
    breakpoints: {
      1025: {
        slidesPerView: 4
      }
    }
  });
  var sliderActive = new Swiper('.index-categories-product .slider-active .swiper-container', {
    effect: 'fade',
    simulateTouch: false,
    autoplay: {
      delay: 3000
    },
    navigation: {
      nextEl: '.index-categories-product .button-navigation-slider.next',
      prevEl: '.index-categories-product .button-navigation-slider.prev'
    },
    thumbs: {
      swiper: sliderThumb
    }
  });
};

var initSliderPartner = function initSliderPartner() {
  var slider = new Swiper('.slider-partners .swiper-container', {
    slidesPerView: 2,
    loop: true,
    speed: 2000,
    spaceBetween: 10,
    autoplay: {
      delay: 2000
    },
    breakpoints: {
      575: {
        spaceBetween: 24
      },
      768: {
        slidesPerView: 3
      },
      1025: {
        slidesPerView: 5,
        spaceBetween: 44
      },
      1440: {
        slidesPerView: 5,
        spaceBetween: 80
      }
    }
  });
};

var initSliderNews = function initSliderNews() {
  var slider = new Swiper('.slider-news .swiper-container', {
    slidesPerView: 1,
    speed: 1000,
    spaceBetween: 20,
    autoplay: {
      delay: 4000
    },
    navigation: {
      nextEl: '.slider-news .button-navigation-slider.next',
      prevEl: '.slider-news .button-navigation-slider.prev'
    },
    breakpoints: {
      600: {
        slidesPerView: 2
      },
      1025: {
        slidesPerView: 3
      }
    }
  });
};

var initSliderOurTeam = function initSliderOurTeam() {
  var slider = new Swiper('.slider-our-team .swiper-container', {
    slidesPerView: 1,
    speed: 1000,
    spaceBetween: 20,
    autoplay: {
      delay: 4000
    },
    navigation: {
      nextEl: '.slider-our-team .button-navigation-slider.next',
      prevEl: '.slider-our-team .button-navigation-slider.prev'
    },
    breakpoints: {
      600: {
        slidesPerView: 3
      },
      1025: {
        slidesPerView: 4
      }
    }
  });
};

var initSliderVideoGallery = function initSliderVideoGallery() {
  var slider = new Swiper('.slider-video-gallery .swiper-container', {
    slidesPerView: 1,
    speed: 1000,
    spaceBetween: 20,
    autoplay: {
      delay: 4000
    },
    navigation: {
      nextEl: '.slider-video-gallery .button-navigation-slider.next',
      prevEl: '.slider-video-gallery .button-navigation-slider.prev'
    },
    breakpoints: {
      600: {
        slidesPerView: 2
      },
      1025: {
        slidesPerView: 3
      }
    }
  });
};

var initSliderProductDetail = function initSliderProductDetail() {
  var sliderThumb = new Swiper('.slider-product-detail .slider-thumb .swiper-container', {
    slidesPerView: 2,
    spaceBetween: 16,
    speed: 1000,
    autoplay: {
      delay: 3000
    },
    breakpoints: {
      1025: {
        slidesPerView: 4
      }
    }
  });
  var sliderActive = new Swiper('.slider-product-detail .slider-active .swiper-container', {
    effect: 'fade',
    speed: 1000,
    autoplay: {
      delay: 3000
    },
    thumbs: {
      swiper: sliderThumb
    }
  });
};

var initSliderProductOther = function initSliderProductOther() {
  var slider = new Swiper('.other-products .swiper-container', {
    speed: 1000,
    slidesPerView: 1,
    autoplay: {
      delay: 3000
    },
    navigation: {
      nextEl: '.other-products .button-navigation-slider.next',
      prevEl: '.other-products .button-navigation-slider.prev'
    },
    breakpoints: {
      768: {
        slidesPerView: 3,
        spaceBetween: 24
      },
      1025: {
        slidesPerView: 4,
        spaceBetween: 24
      }
    }
  });
};

var initSliderProductReview = function initSliderProductReview() {
  var slider = new Swiper('.product-detail-review .swiper-container', {
    speed: 1000,
    slidesPerView: 1,
    simulateTouch: false,
    autoplay: {
      delay: 3000
    },
    breakpoints: {
      768: {
        slidesPerView: 2,
        spaceBetween: 24
      },
      1440: {
        slidesPerView: 3,
        spaceBetween: 24
      }
    }
  });
};

var initializeWowJs = function initializeWowJs() {
  var wow = new WOW({
    boxClass: 'wow',
    // animated element css class (default is wow)
    animateClass: 'animated',
    // animation css class (default is animated)
    offset: 0,
    // distance to the element when triggering the animation (default is 0)
    mobile: true,
    // trigger animations on mobile devices (default is true)
    live: true,
    // act on asynchronously loaded content (default is true)
    callback: function callback(box) {// the callback is fired every time an animation is started
      // the argument that is passed in is the DOM node being animated
    },
    scrollContainer: null,
    // optional scroll container selector, otherwise use window,
    resetAnimation: true // reset animation on end (default is true)

  });
  wow.init();
};

var initializeMasonryJs = function initializeMasonryJs() {
  var elements = document.querySelectorAll('.grid-masonry');
  elements.forEach(function (item) {
    var msnry = new Masonry(item, {
      itemSelector: '.grid-masonry-item',
      isAnimated: true,
      animationOptions: {
        duration: 700,
        easing: 'linear',
        queue: false
      }
    });
  });
};

var initializeFancyAppJs = function initializeFancyAppJs() {
  $('[data-fancybox]').fancybox({
    // Options will go here
    thumbs: {
      autoStart: true
    },
    transitionEffect: 'zoom-in-out',
    // Duration in ms for transition animation
    transitionDuration: 366
  });
};

var scrollToGalleryProductDetail = function scrollToGalleryProductDetail() {
  var btn = document.querySelector('.btn-scroll-to-gallery');
  var sectionScrollTo = document.querySelector('.product-detail-gallery');

  if (btn) {
    btn.addEventListener('click', function (e) {
      sectionScrollTo.scrollIntoView({
        behavior: 'smooth',
        block: 'center',
        inline: 'nearest'
      });
    });
  }
};

var formatter = new Intl.NumberFormat('vi', {
  style: 'currency',
  currency: 'VND'
});

var qualityInput = function qualityInput() {
  var items = document.querySelectorAll('.quality-product-input');
  items.forEach(function (item) {
    var plus = item.querySelector('.btn-plus');
    var minus = item.querySelector('.btn-minus');
    var input = item.querySelector('input');
    var currentValue = input.getAttribute('value');
    plus.addEventListener('click', function (e) {
      currentValue++;
      input.setAttribute('value', currentValue);
      updateCartTotal();
    });
    minus.addEventListener('click', function (e) {
      currentValue--;

      if (currentValue < 1) {
        currentValue = 1;
      }

      input.setAttribute('value', currentValue);
      updateCartTotal();
    });
  });
};

var deleteRowTableCart = function deleteRowTableCart() {
  var buttonsDelete = document.querySelectorAll('.table-cart .btn-delete');
  buttonsDelete.forEach(function (item) {
    item.addEventListener('click', function (e) {
      var id = item.getAttribute('data-id');
      $.ajax({
        type: "get",
        url: "/wp-admin/admin-ajax.php",
        datatype: "json",
        data: {
          action: "detele_cart",
          id: id
        },
        success: function success(response) {
          if (response.success) {
            item.parentElement.parentElement.remove();
            updateCartTotal();
            checkCart();
            $('.hl-cart-total').html((0, _wpCustom.readCookie)());
          }
        }
      });
    });
  });
};

var ajaxFilterProducts = function ajaxFilterProducts() {
  var itemsFilter = $('.aside-menu-products .filter-wrapper .checkbox__custom input'); // DANH SÁCH SẢN PHẨM BAM ĐẦU (CHƯA FILTER)

  var listProductCurrent = $('section .products');
  itemsFilter.each(function (index, item) {
    $(item).on('click', function (e) {
      var url = $(this).attr('data-url');
      $.ajax({
        type: 'GET',
        url: url,
        beforeSend: function beforeSend() {
          // THÊM LOADING CHO DANH SÁCH SẢN PHẨM
          listProductCurrent.addClass('loading');
        },
        success: function success(res) {
          // DATA TỪ URL REQUEST SAU ĐÓ TÌM ĐOẠN HTML CẦN LẤY
          var data = $(res).find('.list-product .item-product'); // DÁN VÀO HTML HIỆN TẠI

          listProductCurrent.html(data);
        },
        complete: function complete() {
          // XÓA LOADING CHO DANH SÁCH SẢN PHẨM
          listProductCurrent.removeClass('loading');
        }
      });
    });
  });
};

var rowCartTotal = function rowCartTotal() {
  var rowsCart = document.querySelectorAll('.row-cart-item-product');
  rowsCart.forEach(function (row) {
    var unit = parseInt(row.querySelector('.unit').getAttribute('data-value')); // unit.textContent = formatter.format(unit);

    var quality = parseInt(row.querySelector('.quality-product-input input').value);
    var rowTotal = parseInt(unit * quality); // IN MÀN HÌNH ĐƠN GIÁ

    row.querySelector('.unit').textContent = formatter.format(unit); // TỔNG TIỀN HÀNG

    row.querySelector('.row-total').setAttribute('data-value', rowTotal);
    row.querySelector('.row-total').textContent = formatter.format(rowTotal);
  });
};

var tempCartTotal = function tempCartTotal() {
  rowCartTotal();
  var sum = 0;
  var itemsRowTotal = document.querySelectorAll('.row-cart-item-product .row-total');
  itemsRowTotal.forEach(function (item) {
    sum += parseInt(item.getAttribute('data-value'));
  });
  return sum;
};

var cartTotal = function cartTotal() {
  var cartTotal = document.querySelector('.cart-total');

  if (cartTotal) {
    document.querySelector('.temp').setAttribute('data-value', tempCartTotal());
    var temp = document.querySelector('.temp').getAttribute('data-value');
    var service = parseInt(cartTotal.querySelector('.service').getAttribute('data-value'));
    var tax = parseInt(temp * cartTotal.querySelector('.tax').getAttribute('data-value') / 100);
    var discount = parseInt(cartTotal.querySelector('.discount').getAttribute('data-value'));
    cartTotal.querySelector('.temp').textContent = formatter.format(temp); // IN GIÁ TIỀN RA MÀN HÌNH

    cartTotal.querySelector('.service').textContent = formatter.format(service); // TIỀN THUẾ

    cartTotal.querySelector('.tax').textContent = formatter.format(tax); // TIỀN GIẢM GIÁ

    cartTotal.querySelector('.discount').textContent = formatter.format(discount); // TỔNG TIỀN

    cartTotal.querySelector('.total').textContent = formatter.format(parseInt(temp) + service + tax - discount);
  } else {// console.log('Cart Total is not defind');
  }
};

exports.cartTotal = cartTotal;

var updateCartTotal = function updateCartTotal() {
  var isCart = document.querySelector('.cart');

  if (isCart) {
    tempCartTotal();
    cartTotal();
  }
};

window.addEventListener('load', function (e) {
  initializeMasonryJs();
  initializeWowJs();
  initializeFancyAppJs();
  initHeroBanner();
  initSliderCategoryProduct();
  initSliderPartner();
  initSliderNews();
  initSliderOurTeam();
  initSliderVideoGallery();
  initSliderProductDetail();
  initSliderProductOther();
  initSliderProductReview();
  showNaviationMobile();
  showFilterMobile();
  moveNavOutHeader(1024);
  scrollToGalleryProductDetail();
  qualityInput();
  deleteRowTableCart(); // ajaxFilterProducts();

  checkCart();
  cartTotal();
  var ProductDetail = new _tabs.default('.tabs-product-detail .tab-container');
});
window.addEventListener('scroll', function (e) {
  fixedHeaderWhenScroll();
});
window.addEventListener('resize', function () {
  moveNavOutHeader(1024);
});

},{"./libraries/tabs":1,"./wp-custom":3}],3:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCookie = getCookie;
exports.shakeCart = shakeCart;
exports.readCookie = void 0;

var _main = _interopRequireWildcard(require("./main"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function getCookie(cookieName) {
  var cookie = {};
  document.cookie.split(';').forEach(function (el) {
    var _el$split = el.split('='),
        _el$split2 = _slicedToArray(_el$split, 2),
        key = _el$split2[0],
        value = _el$split2[1];

    cookie[key.trim()] = value;
  });
  return cookie[cookieName];
}

var readCookie = function readCookie() {
  var allcookies = getCookie('shopping_cart'),
      decodedData = decodeURIComponent(allcookies),
      jsonObject = JSON.parse(decodedData);
  return Object.keys(jsonObject).reduce(function (t, key) {
    return t + parseInt(jsonObject[key]['item_quantity']);
  }, 0);
};

exports.readCookie = readCookie;

function shakeCart() {
  var cart = document.querySelector(".icon-cart");
  cart.classList.add("shake");
  setTimeout(function () {
    cart.classList.remove("shake");
  }, 1000);
}

jQuery(document).ready(function ($) {
  $('#apply-coupon').on('click', function () {
    var val = $('[name="coupon"]');

    if (readCookie() > 0) {
      if (val.val()) {
        $('#apply-coupon').addClass('bg-gray');
        $.ajax({
          type: "get",
          url: "/wp-admin/admin-ajax.php",
          data: {
            action: 'coupon',
            data: val.val()
          },
          dataType: "json",
          success: function success(response) {
            if (response.success && response.data != null) {
              $('.discount').attr('data-value', response.data);
              (0, _main.cartTotal)();
              $('[name="ma-giam-gia"]').val(val.val());
              $('#apply-coupon').removeClass('bg-gray');
              $('.mess').append('<p class="flush-content">Bạn được giảm ' + response.data + '%</p>');
              setTimeout(function () {
                $('.flush-content').remove();
              }, 7000);
            } else {
              $('#apply-coupon').removeClass('bg-gray');
              $('.mess').append('<p class="flush-content">Mã giảm giá không hợp lệ</p>');
              setTimeout(function () {
                $('.flush-content').remove();
              }, 7000);
            }
          }
        });
      } else {
        val.focus();
        val.addClass('error');
        $('.mess').append('<p class="flush-content">Chưa nhập mã giảm giá</p>');
        setTimeout(function () {
          $('.flush-content').remove();
        }, 5000);
        setTimeout(function () {
          val.removeClass('error');
        }, 1000);
      }
    } else {
      $('.mess').append('<p class="flush-content">Giỏ hàng trống</p>');
      setTimeout(function () {
        $('.flush-content').remove();
      }, 5000);
    }
  });
  $('.btn-add-cart').click(function (e) {
    e.preventDefault();
    $(this).addClass('bg-gray').removeClass('bg-primary');
    var id = $('[name="hidden_id"]').val(),
        quantity = $('[name="quantity"]').val();
    $.ajax({
      type: "post",
      url: "/wp-admin/admin-ajax.php",
      datatype: "json",
      data: {
        action: "add_to_cart",
        id: id,
        quantity: quantity
      },
      success: function success(response) {
        $('.btn-add-cart').addClass('bg-primary').removeClass('bg-gray');
        shakeCart();

        if (response.success) {
          $('.hl-cart-total').html(readCookie());
        }
      }
    });
  });
  $('.update-cart').on('click', function (e) {
    e.preventDefault();
    $(this).addClass('bg-gray').removeClass('color-primary');
    $('.loading-aj').css('z-index', '1');
    var arr = [];
    document.querySelectorAll('.quality-product-input').forEach(function (e) {
      var input = e.querySelector('input'),
          id = input.getAttribute('data-id'),
          val = input.value;
      arr.push({
        id: id,
        quantity: val
      });
    });
    $.ajax({
      type: "post",
      url: "/wp-admin/admin-ajax.php",
      data: {
        action: "updatecart",
        data: arr
      },
      dataType: "json",
      success: function success(response) {
        $('.update-cart').addClass('color-primary').removeClass('bg-gray');
        $('.loading-aj').css('z-index', '-1');
        shakeCart();

        if (response.success) {
          $('.hl-cart-total').html(readCookie());
        }
      }
    });
  });
});
var path = window.location.pathname;
path = path.replace(/\/$/, "");
path = decodeURIComponent(path);
document.querySelectorAll("#primary-menu li a").forEach(function (link) {
  var url = link.href,
      li = new URL(url).pathname;

  if (path.substring(0, li.length) === li.replace(/\/$/, '')) {
    link.parentElement.classList.add('active');
  }
});

if (window.matchMedia("(max-width: 1024px)").matches) {
  document.querySelectorAll(".navigation-mobile li a").forEach(function (mb) {
    var mbl = mb.href,
        mbp = new URL(mbl).pathname;

    if (path.substring(0, mbp.length) === mbp.replace(/\/$/, '')) {
      mb.parentElement.classList.add('active');
    }
  });
}

},{"./main":2}]},{},[2])

//# sourceMappingURL=main.min.js.map
